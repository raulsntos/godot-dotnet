name: 🧪 Continuous integration
on: [push, pull_request]

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 🐧 Linux (x64)
            os: ubuntu-22.04
            rid: linux-x64
            run-sample-project: true
            cibuild-script: ./eng/common/cibuild.sh --warnaserror false

          - name: 🏁 Windows (x64)
            os: windows-latest
            rid: win-x64
            run-sample-project: false
            cibuild-script: ./eng/common/CIBuild.cmd -warnAsError 0

          - name: 🍎 macOS (x64)
            os: macos-latest
            rid: osx-arm64
            run-sample-project: false
            cibuild-script: ./eng/common/cibuild.sh --warnaserror false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Linux dependencies
        if: ${{ matrix.rid == 'linux-x64' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config

      # Setting up .NET with the GitHub action to register the
      # problem matchers for error output.
      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Build and test solution
        run: |
          ${{ matrix.cibuild-script }} --generate

      - name: Build sample project
        run: |
          cd samples/Summator
          dotnet publish Extension -r ${{ matrix.rid }} -o Game/lib

      - name: Download latest Godot artifacts
        uses: dsnopek/action-download-artifact@1322f74e2dac9feed2ee76a32d9ae1ca3b4cf4e9
        if: ${{ matrix.run-sample-project }}
        with:
          repo: godotengine/godot
          branch: master
          event: push
          workflow: linux_builds.yml
          workflow_conclusion: success
          name: linux-editor-mono
          search_artifacts: true
          check_artifacts: true
          ensure_latest: true
          path: godot-artifacts

      - name: Run sample project
        if: ${{ matrix.run-sample-project }}
        timeout-minutes: 10
        run: |
          chmod +x ./godot-artifacts/godot.linuxbsd.editor.x86_64.mono
          ./godot-artifacts/godot.linuxbsd.editor.x86_64.mono --version

          # Need to run the editor so .godot is generated... but it crashes! Ignore that :-)
          ./godot-artifacts/godot.linuxbsd.editor.x86_64.mono --path samples/Summator/Game --editor --headless --quit >/dev/null 2>&1 || true

          ./godot-artifacts/godot.linuxbsd.editor.x86_64.mono --path samples/Summator/Game --debug --headless --quit

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: godot-dotnet-${{ matrix.rid }}-artifacts
          path: artifacts/
          if-no-files-found: error
